diff --git a/include/system/camera.h b/include/system/camera.h
index 0570ca0..81660a9 100644
--- a/include/system/camera.h
+++ b/include/system/camera.h
@@ -202,6 +202,10 @@ enum {
      */
 #ifndef CAMERA_VENDOR_L_COMPAT
     CAMERA_CMD_SET_VIDEO_FORMAT = 11,
+    CAMERA_CMD_SET_FLIP_ON = 12,
+    MULTI_FRAME_SHOT_START            = 1261,
+    AUTO_LOW_LIGHT_SET                = 1351,
+    HDR_PICTURE_MODE_CHANGE           = 1273,
 
     CAMERA_CMD_VENDOR_START = 20,
     /**
@@ -358,6 +362,11 @@ typedef struct camera_frame_metadata {
      * An array of the detected faces. The length is number_of_faces.
      */
     camera_face_t *faces;
+
+    /**
+     * Value for low light condition
+     */
+    int32_t light_condition;
 } camera_frame_metadata_t;
 
 __END_DECLS
diff --git a/init/builtins.cpp b/init/builtins.cpp
index 949e139..58eac5f 100755
--- a/init/builtins.cpp
+++ b/init/builtins.cpp
@@ -1149,6 +1149,15 @@ static int do_wait(const std::vector<std::string>& args) {
         return -1;
 }
 
+static int do_pipe(const std::vector<std::string>& args) {
+    mode_t mode = get_mode(args[1].c_str());
+    if (mkfifo(args[2].c_str(), mode) < 0) {
+        ERROR("peter do pipe error haha\n");
+        return -errno;
+    }
+    return 0;
+}
+
 /*
  * Callback to make a directory from the ext4 code
  */
@@ -1221,6 +1230,7 @@ BuiltinFunctionMap::Map& BuiltinFunctionMap::map() const {
         {"verity_load_state",       {0,     0,    do_verity_load_state}},
         {"verity_update_state",     {0,     0,    do_verity_update_state}},
         {"wait",                    {1,     2,    do_wait}},
+        {"pipe",                    {1,     2,    do_pipe}},
         {"write",                   {2,     4,    do_write}},
     };
     return builtin_functions;
